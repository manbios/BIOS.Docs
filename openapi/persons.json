{
  "x-generator": "NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Persons",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:7279"
    }
  ],
  "paths": {
    "/persons": {
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "Create Person",
        "description": "Use this endpoint to create a new person profile.",
        "operationId": "BIOSPersonsEndpointsCreatePersonEndpoint",
        "responses": {
          "201": {
            "description": "The person you have just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSPersonsContractsCreatePersonResponse"
                },
                "example": {
                  "id": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "2cb8a18d-c062-4f77-a60e-a0dc8c74de52",
                  "date": 1694783493054,
                  "errors": []
                }
              }
            }
          },
          "401": {
            "description": "The request is not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "Access to the API resource is not authorized due to an authentication failure.",
                  "type": "unauthorized_access",
                  "id": "2e882445-6e2e-4805-9f60-7efa73eb67d3",
                  "date": 1694783493060,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "List Persons",
        "description": "Use this endpoint to list all your persons.",
        "operationId": "BIOSPersonsEndpointsListPersonsEndpoint",
        "responses": {
          "200": {
            "description": "A list of your persons.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSPersonsContractsListPersonsResponse"
                },
                "example": []
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "043892b0-dfb5-42b9-bfbf-d2ab33ed62a8",
                  "date": 1694783493062,
                  "errors": []
                }
              }
            }
          },
          "401": {
            "description": "The request is not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "Access to the API resource is not authorized due to an authentication failure.",
                  "type": "unauthorized_access",
                  "id": "3046d84b-e307-4778-bc05-2fd36bd331ff",
                  "date": 1694783493062,
                  "errors": []
                }
              }
            }
          }
        }
      }
    },
    "/persons/{person_id}": {
      "delete": {
        "tags": [
          "Persons"
        ],
        "summary": "Delete person",
        "description": "Use this endpoint to delete an existing person profile.",
        "operationId": "BIOSPersonsEndpointsDeletePersonEndpoint",
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The person has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsEmptyResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "226a88f7-30a4-4a8a-92c1-8676a04ca176",
                  "date": 1694783493061,
                  "errors": []
                }
              }
            }
          },
          "401": {
            "description": "The request is not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "Access to the API resource is not authorized due to an authentication failure.",
                  "type": "unauthorized_access",
                  "id": "e6846ca9-4792-4901-9700-c1c5067ea41e",
                  "date": 1694783493061,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "af0bbc7d-3c27-43a4-88de-9c09824d4080",
                  "date": 1694783493061,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Retrieve Person",
        "description": "Use this endpoint to retrieve an existing person profile.",
        "operationId": "BIOSPersonsEndpointsRetrievePersonEndpoint",
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The person with the ID you provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSPersonsContractsRetrievePersonResponse"
                },
                "example": {
                  "id": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "c5fd71c6-1fdb-496a-9128-a280543d0dc8",
                  "date": 1694783493062,
                  "errors": []
                }
              }
            }
          },
          "401": {
            "description": "The request is not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "Access to the API resource is not authorized due to an authentication failure.",
                  "type": "unauthorized_access",
                  "id": "516debe4-716e-4731-964d-fcafe501bab1",
                  "date": 1694783493062,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "155bbc5f-1305-49a6-9f08-d0f6fc52a15a",
                  "date": 1694783493062,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "Update Person",
        "description": "Use this endpoint to update an existing person profile.",
        "operationId": "BIOSPersonsEndpointsUpdatePersonEndpoint",
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The person you have just updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSPersonsContractsUpdatePersonResponse"
                },
                "example": {
                  "id": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "b3c93a87-ceea-4f34-a2c1-3cac3bedcc33",
                  "date": 1694783493063,
                  "errors": []
                }
              }
            }
          },
          "401": {
            "description": "The request is not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "Access to the API resource is not authorized due to an authentication failure.",
                  "type": "unauthorized_access",
                  "id": "a90a45dc-b845-4a8b-bf45-cc60b0587281",
                  "date": 1694783493063,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BIOSCoreApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "966266a4-6e15-4db3-b22d-31f0e01fa6cd",
                  "date": 1694783493063,
                  "errors": []
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BIOSPersonsContractsCreatePersonResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BIOSPersonsContractsPersonContract"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BIOSPersonsContractsPersonContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "BIOSCoreApiErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BIOSPersonsContractsCreatePersonRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "FastEndpointsEmptyResponse": {
        "type": "object",
        "description": "a response dto that doesn't have any properties",
        "additionalProperties": false
      },
      "BIOSPersonsContractsListPersonsResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BIOSPersonsContractsPersonContract"
        }
      },
      "BIOSPersonsContractsRetrievePersonResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BIOSPersonsContractsPersonContract"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BIOSPersonsContractsUpdatePersonResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BIOSPersonsContractsPersonContract"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BIOSPersonsContractsUpdatePersonRequest": {
        "type": "object",
        "additionalProperties": false
      }
    }
  }
}