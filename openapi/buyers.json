{
  "x-generator": "NSwag v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Buyers",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:7041"
    }
  ],
  "paths": {
    "/paymentmethods/{payment_method_id}/attach": {
      "post": {
        "tags": [
          "Paymentmethods"
        ],
        "summary": "Attach Payment Method",
        "description": "Use this endpoint to Attach an existing payment method to a buyer.",
        "operationId": "BIOSBuyersEndpointsPaymentMethodsAttachPaymentMethodToBuyerEndpoint",
        "parameters": [
          {
            "name": "payment_method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "AttachPaymentMethodToBuyerRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachPaymentMethodToBuyerRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The payment method you've just attached to buyer.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodContract"
                },
                "example": {
                  "id": null,
                  "type": null,
                  "billing_details": null,
                  "card": null,
                  "bank": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "9aac91bc-b155-4245-b8e4-e122d3549bf6",
                  "date": 1696582546368,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "cbcb8f9c-a7a1-4670-aa52-b4bb714b4bff",
                  "date": 1696582546373,
                  "errors": []
                }
              }
            }
          }
        }
      }
    },
    "/paymentmethods": {
      "post": {
        "tags": [
          "Paymentmethods"
        ],
        "summary": "Create Payment Method",
        "description": "Use this endpoint to create a new payment method.",
        "operationId": "BIOSBuyersEndpointsPaymentMethodsCreatePaymentMethodEndpoint",
        "requestBody": {
          "x-name": "CreatePaymentMethodRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodContract"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "tags": [
          "Paymentmethods"
        ],
        "summary": "List Payment Methods",
        "description": "Use this endpoint to list all your payment methods.",
        "operationId": "BIOSBuyersEndpointsPaymentMethodsListPaymentMethodsEndpoint",
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "A list of your payment methods.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethodContract"
                  }
                },
                "example": []
              }
            }
          }
        }
      }
    },
    "/paymentmethods/{payment_method_id}/detach": {
      "post": {
        "tags": [
          "Paymentmethods"
        ],
        "summary": "Detach Payment Method",
        "description": "Use this endpoint to detach an existing payment method from a buyer.",
        "operationId": "BIOSBuyersEndpointsPaymentMethodsDetachPaymentMethodFromBuyerEndpoint",
        "parameters": [
          {
            "name": "payment_method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The payment method you've just detached from buyer.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodContract"
                },
                "example": {
                  "id": null,
                  "type": null,
                  "billing_details": null,
                  "card": null,
                  "bank": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "5972fc58-69ca-4329-9214-947f7b5dd56e",
                  "date": 1696582546390,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "eb126615-5009-4ea9-9045-a58d746b89e8",
                  "date": 1696582546390,
                  "errors": []
                }
              }
            }
          }
        }
      }
    },
    "/paymentmethods/{payment_method_id}": {
      "get": {
        "tags": [
          "Paymentmethods"
        ],
        "summary": "Retrieve Payment Method",
        "description": "Use this endpoint to retrieve an existing payment method.",
        "operationId": "BIOSBuyersEndpointsPaymentMethodsRetrievePaymentMethodEndpoint",
        "parameters": [
          {
            "name": "payment_method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The payment method with the ID you provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodContract"
                },
                "example": {
                  "id": null,
                  "type": null,
                  "billing_details": null,
                  "card": null,
                  "bank": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "04769ddd-bc4b-457f-8760-b75e4c7737f8",
                  "date": 1696582546392,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "0805e902-dbde-4e5d-ac9e-2a7b6db9a16e",
                  "date": 1696582546392,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Paymentmethods"
        ],
        "summary": "Update Payment Method",
        "description": "Use this endpoint to update an existing payment method.",
        "operationId": "BIOSBuyersEndpointsPaymentMethodsUpdatePaymentMethodEndpoint",
        "parameters": [
          {
            "name": "payment_method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdatePaymentMethodRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentMethodRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The payment method you have just updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodContract"
                },
                "example": {
                  "id": null,
                  "type": null,
                  "billing_details": null,
                  "card": null,
                  "bank": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "7ef7f41a-ca64-48f3-958c-ee0c13bf3c4f",
                  "date": 1696582546393,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "400b6992-24f4-4a00-a351-12f534396a4b",
                  "date": 1696582546393,
                  "errors": []
                }
              }
            }
          }
        }
      }
    },
    "/buyers": {
      "post": {
        "tags": [
          "Buyers"
        ],
        "summary": "Create Buyer",
        "description": "Use this endpoint to create a new buyer profile.",
        "operationId": "BIOSBuyersEndpointsBuyersCreateBuyerEndpoint",
        "requestBody": {
          "x-name": "CreateBuyerRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBuyerRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "The buyer you have just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerContract"
                },
                "examples": {
                  "value": {
                    "value": {
                      "id": "822d91a1-c963-42b0-b602-44fda373d845",
                      "email": "buyeremail@example.it",
                      "name": "Jhon Doe",
                      "phone": "+12 34567890",
                      "address": {
                        "city": "East Artberg",
                        "country": "us",
                        "line1": "Anderson Station",
                        "line2": "5170 Rowe Key Apt. 750",
                        "postal_code": "48862",
                        "state": "Connecticut"
                      },
                      "metadata": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "6ea75ec8-4c36-4dad-90e5-749a099d1b5f",
                  "date": 1696582546395,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Buyers"
        ],
        "summary": "List Buyers",
        "description": "Use this endpoint to list all your buyers.",
        "operationId": "BIOSBuyersEndpointsBuyersListBuyersEndpoint",
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "A list of your buyers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuyerContract"
                  }
                },
                "example": []
              }
            }
          }
        }
      }
    },
    "/buyers/{buyer_id}": {
      "delete": {
        "tags": [
          "Buyers"
        ],
        "summary": "Delete Buyer",
        "description": "Use this endpoint to delete an existing buyer profile.",
        "operationId": "BIOSBuyersEndpointsBuyersDeleteBuyerEndpoint",
        "parameters": [
          {
            "name": "buyer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "The buyer has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "260215d3-16b5-436e-aa14-35bade6adf76",
                  "date": 1696582546395,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "16f3cd2f-a0cb-436f-b599-bf75ce206801",
                  "date": 1696582546395,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Buyers"
        ],
        "summary": "Retrieve Buyer",
        "description": "Use this endpoint to retrieve an existing buyer profile.",
        "operationId": "BIOSBuyersEndpointsBuyersRetrieveBuyerEndpoint",
        "parameters": [
          {
            "name": "buyer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The buyer with the ID you provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerContract"
                },
                "example": {
                  "id": null,
                  "email": null,
                  "name": null,
                  "phone": null,
                  "address": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "d3471b53-a555-4840-9673-9ed6d1206441",
                  "date": 1696582546396,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "1814c20d-ec3d-486b-9d13-7ad2fb1eef46",
                  "date": 1696582546396,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Buyers"
        ],
        "summary": "Update Buyer",
        "description": "Use this endpoint to update an existing buyer profile.",
        "operationId": "BIOSBuyersEndpointsBuyersUpdateBuyerEndpoint",
        "parameters": [
          {
            "name": "buyer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateBuyerRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBuyerRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerContract"
                },
                "example": {
                  "id": "2c4267ed-7e31-4a64-b6f7-32b2bddfd864",
                  "email": "buyeremail@example.it",
                  "name": "Jhon Doe",
                  "phone": "+12 34567890",
                  "address": {
                    "city": "East Artberg",
                    "country": "us",
                    "line1": "Anderson Station",
                    "line2": "5170 Rowe Key Apt. 750",
                    "postal_code": "48862",
                    "state": "Connecticut"
                  },
                  "metadata": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PaymentMethodContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object."
          },
          "type": {
            "type": "string",
            "description": "The type of the PaymentMethod."
          },
          "billing_details": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BillingDetailsContract"
              }
            ]
          },
          "card": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardContract"
              }
            ]
          },
          "bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankContract"
              }
            ]
          },
          "metadata": {
            "$ref": "#/components/schemas/MetadataContract"
          }
        }
      },
      "BillingDetailsContract": {
        "type": "object",
        "description": "Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.",
        "additionalProperties": false,
        "properties": {
          "address": {
            "description": "Billing address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressContract"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Email address.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Full name.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Billing phone number(including extension).",
            "nullable": true
          }
        }
      },
      "AddressContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "city": {
            "type": "string",
            "description": "City, district, suburb, town, or village."
          },
          "country": {
            "type": "string",
            "description": "Two-letter country code (ISO 3166-1 alpha-2)."
          },
          "line1": {
            "type": "string",
            "description": "Address line 1 (e.g., street, PO Box, or company name)."
          },
          "line2": {
            "type": "string",
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "ZIP or postal code."
          },
          "state": {
            "type": "string",
            "description": "State, county, province, or region."
          }
        }
      },
      "CardContract": {
        "type": "object",
        "description": "If this is a card payment method, this hash contains the buyer’s card details.",
        "additionalProperties": false,
        "properties": {
          "brand": {
            "type": "string",
            "description": "Card brand."
          },
          "last_four": {
            "type": "string",
            "description": "The last four digits of the card."
          },
          "exp_month": {
            "type": "integer",
            "description": "Two-digit number representing the card's expiration month.",
            "format": "int32"
          },
          "exp_year": {
            "type": "integer",
            "description": "Four-digit number representing the card’s expiration year.",
            "format": "int32"
          },
          "country": {
            "type": "string",
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you’ve collected."
          },
          "funding": {
            "type": "string",
            "description": "Card funding type."
          }
        }
      },
      "BankContract": {
        "type": "object",
        "description": "If this is a bank payment method, this hash contains details about the bank account.",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The buyer’s bank name."
          },
          "country": {
            "type": "string",
            "description": "Two-letter ISO code representing the country the bank account is located in. "
          }
        }
      },
      "MetadataContract": {
        "type": "object",
        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "additionalProperties": {
          "type": "string"
        }
      },
      "ApiErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AttachPaymentMethodToBuyerRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "buyer_id"
        ],
        "properties": {
          "buyer_id": {
            "type": "string",
            "description": "The ID of the buyer to which to attach the PaymentMethod.",
            "minLength": 1
          }
        }
      },
      "CreatePaymentMethodRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Possible values `alipay` `bancontact` `blik` `card` `eps` `fpx` `giropay` `ideal` `p24` `paypal` `sofort` `wechat_pay`",
            "minLength": 1
          },
          "billing_details": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BillingDetailsOptions"
              }
            ]
          },
          "card": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreateCardOptions"
              }
            ]
          },
          "bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankOptions"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetadataOptions"
              }
            ]
          }
        }
      },
      "BillingDetailsOptions": {
        "type": "object",
        "description": "Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.",
        "additionalProperties": false,
        "properties": {
          "address": {
            "description": "Billing address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressOptions"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Email address."
          },
          "name": {
            "type": "string",
            "description": "Full name."
          },
          "phone": {
            "type": "string",
            "description": "Billing phone number(including extension)."
          }
        }
      },
      "AddressOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "city": {
            "type": "string",
            "description": "City, district, suburb, town, or village."
          },
          "country": {
            "type": "string",
            "description": "Two-letter country code (ISO 3166-1 alpha-2)."
          },
          "line1": {
            "type": "string",
            "description": "Address line 1 (e.g., street, PO Box, or company name)."
          },
          "line2": {
            "type": "string",
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "ZIP or postal code."
          },
          "state": {
            "type": "string",
            "description": "State, county, province, or region."
          }
        }
      },
      "CreateCardOptions": {
        "type": "object",
        "description": "If this is a card PaymentMethod, this hash contains the user’s card details. When providing a card number, you must meet the requirements for PCI compliance. We strongly recommend using BIOS.js instead of interacting with this API directly.",
        "additionalProperties": false,
        "required": [
          "number",
          "cvc",
          "expMonth",
          "expYear"
        ],
        "properties": {
          "number": {
            "type": "string",
            "description": "The card number, as a string without any separators.",
            "minLength": 1
          },
          "cvc": {
            "type": "string",
            "description": "Card security code. It is highly recommended to always include this value.",
            "minLength": 1
          },
          "expMonth": {
            "type": "integer",
            "description": "Two-digit number representing the card's expiration month.",
            "format": "int32"
          },
          "expYear": {
            "type": "integer",
            "description": "Four-digit number representing the card’s expiration year.",
            "format": "int32"
          }
        }
      },
      "BankOptions": {
        "type": "object",
        "description": "If this is a bank payment method, this hash contains details about the bank account.",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The buyer’s bank name. This parameter can be required with some payment method types.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Two-letter ISO code representing the country the bank account is located in. This parameter can be required with some payment method types.",
            "nullable": true
          }
        }
      },
      "MetadataOptions": {
        "type": "object",
        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata.",
        "additionalProperties": {
          "type": "string",
          "nullable": true
        }
      },
      "UpdatePaymentMethodRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "billing_details": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BillingDetailsOptions"
              }
            ]
          },
          "card": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateCardOptions"
              }
            ]
          },
          "bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankOptions"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetadataOptions"
              }
            ]
          }
        }
      },
      "UpdateCardOptions": {
        "type": "object",
        "description": "If this is a card PaymentMethod, this hash contains the user’s card details.",
        "additionalProperties": false,
        "required": [
          "expMonth",
          "expYear"
        ],
        "properties": {
          "expMonth": {
            "type": "integer",
            "description": "Two-digit number representing the card's expiration month.",
            "format": "int32"
          },
          "expYear": {
            "type": "integer",
            "description": "Four-digit number representing the card’s expiration year.",
            "format": "int32"
          }
        }
      },
      "BuyerContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object."
          },
          "email": {
            "type": "string",
            "description": "The buyer’s email address.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The buyer’s full name.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The buyer’s phone number.",
            "nullable": true
          },
          "address": {
            "description": "The buyer’s address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressContract"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetadataContract"
              }
            ]
          }
        }
      },
      "CreateBuyerRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BuyerOptions"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BuyerOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "description": "The buyer’s email address.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The buyer’s full name.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The buyer’s phone number.",
            "nullable": true
          },
          "address": {
            "description": "The buyer’s address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressOptions"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetadataOptions"
              }
            ]
          }
        }
      },
      "EmptyResponse": {
        "type": "object",
        "description": "a response dto that doesn't have any properties",
        "additionalProperties": false
      },
      "UpdateBuyerRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BuyerOptions"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      }
    }
  }
}