{
  "x-generator": "NSwag v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Merchants",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:7123"
    }
  ],
  "paths": {
    "/payouts": {
      "post": {
        "tags": [
          "Payouts"
        ],
        "summary": "Create Payout",
        "description": "Use this endpoint to create a payout.",
        "operationId": "BIOSMerchantsEndpointsPayoutsCreatePayoutEndpoint",
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "The payout you have just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePayoutResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "20036beb-739a-4a47-8d44-ff7c3fd243b1",
                  "date": 1696582048609,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Payouts"
        ],
        "summary": "List Payouts",
        "description": "Use this endpoint to list all your payouts.",
        "operationId": "BIOSMerchantsEndpointsPayoutsListPayoutsEndpoint",
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "A list of your payouts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPayoutsResponse"
                },
                "example": []
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "f57093b5-d87c-4b11-82b5-98d365c4a1e1",
                  "date": 1696582048616,
                  "errors": []
                }
              }
            }
          }
        }
      }
    },
    "/payouts/{payout_id}": {
      "delete": {
        "tags": [
          "Payouts"
        ],
        "summary": "Delete Payout",
        "description": "Use this endpoint to delete a still not paid payout.",
        "operationId": "BIOSMerchantsEndpointsPayoutsDeletePayoutEndpoint",
        "parameters": [
          {
            "name": "payout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "The payout has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "682a96bb-0cf9-49e5-b8d4-664d4f22cd7c",
                  "date": 1696582048615,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "98302e45-f548-4a80-9997-20705411e18b",
                  "date": 1696582048615,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Payouts"
        ],
        "summary": "Retrieve Payout",
        "description": "Use this endpoint to retrieve an existing payout.",
        "operationId": "BIOSMerchantsEndpointsPayoutsRetrievePayoutEndpoint",
        "parameters": [
          {
            "name": "payout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The payout with the ID you provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrievePayoutResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "efa2f921-5ac9-48e5-b515-e20532079595",
                  "date": 1696582048617,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "9c03c5c4-d638-40c2-8b86-ccfe82ea4c97",
                  "date": 1696582048617,
                  "errors": []
                }
              }
            }
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "summary": "Create Token",
        "description": "Use this endpoint to create your OAuth 2.0 access token.",
        "operationId": "BIOSMerchantsEndpointsOAuthCreateOAuthTokenEndpoint",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Combine your ClientId and API key into a string separated by a colon (“yourclientid:yourapikey”). Encode the string in Base64. Add “Basic ” plus the encoded string to the Authorization header(make sure you keep the space between “Basic ” and the string).",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Your access token with some additional information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOAuthTokenResponse"
                },
                "example": {
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJKb2huIERvZSIsImVtYWlsIjoiam9obi5kb2UuZXhhbXBsZUBjb21tb25seS5jb20iLCJyb2xlIjoiQWRtaW4iLCJpYXQiOjE2MzAwMDAwMDAsImV4cCI6MTYzMDAxMDEwMH0.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "token_type": "Bearer",
                  "expires_in": 300
                }
              }
            }
          },
          "401": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "Access to the API resource is not authorized due to an authentication failure.",
                  "type": "unauthorized_access",
                  "id": "e2898f06-69ef-4b5c-bd6c-6c3a54cd6844",
                  "date": 1696582048619,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Authenticate"
        ],
        "summary": "Test Token",
        "description": "Use this endpoint to test your authorization token.",
        "operationId": "BIOSMerchantsEndpointsOAuthTestOAuthTokenEndpoint",
        "responses": {
          "401": {
            "description": "Authorization checks did not approve the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "Access to the API resource is not authorized due to an authentication failure.",
                  "type": "unauthorized_access",
                  "id": "86a7917a-d605-4314-a50f-baa289d1a028",
                  "date": 1696582048620,
                  "errors": []
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "Your authorization has successfully passed the test.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                },
                "example": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePayoutResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PayoutContract"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PayoutContract": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreatePayoutRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "EmptyResponse": {
        "type": "object",
        "description": "a response dto that doesn't have any properties",
        "additionalProperties": false
      },
      "ListPayoutsResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PayoutContract"
        }
      },
      "RetrievePayoutResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PayoutContract"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateOAuthTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The access token to use to authenticate."
          },
          "token_type": {
            "type": "string",
            "description": "Indicates the type of your token (Bearer)."
          },
          "expires_in": {
            "type": "integer",
            "description": "Returns the number of seconds until your token expires. By default, the value is 3600 seconds for the production environment, and 1200 seconds for the sandbox environment. Please note that this value can vary (for security reasons for instance). We strongly recommend setting up your refresh token request based on the expires_in value rather than hard-coding the default value in your code.",
            "format": "int64"
          }
        }
      },
      "CreateOAuthTokenRequest": {
        "type": "object",
        "additionalProperties": false
      }
    }
  }
}