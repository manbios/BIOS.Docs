{
  "x-generator": "NSwag v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Sellers",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:7183"
    }
  ],
  "paths": {
    "/sellers": {
      "post": {
        "tags": [
          "Sellers"
        ],
        "summary": "Create Seller",
        "description": "Use this endpoint to create a new seller profile.",
        "operationId": "BIOSSellersEndpointsSellersCreateSellerEndpoint",
        "requestBody": {
          "x-name": "CreateSellerRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSellerRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "The seller you have just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerContract"
                },
                "example": {
                  "id": null,
                  "country": null,
                  "type": null,
                  "mcc": null,
                  "url": null,
                  "description": null,
                  "company": null,
                  "persons": null,
                  "bank_accounts": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "a380eda8-b3ed-49cd-ad6d-6a5fb6d45cf2",
                  "date": 1696582049768,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sellers"
        ],
        "summary": "List Sellers",
        "description": "Use this endpoint to list all your sellers.",
        "operationId": "BIOSSellersEndpointsSellersListSellersEndpoint",
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "A list of your sellers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellerContract"
                  }
                },
                "example": []
              }
            }
          }
        }
      }
    },
    "/sellers/{seller_id}": {
      "delete": {
        "tags": [
          "Sellers"
        ],
        "summary": "Delete Seller",
        "description": "Use this endpoint to delete an existing seller profile.",
        "operationId": "BIOSSellersEndpointsSellersDeleteSellerEndpoint",
        "parameters": [
          {
            "name": "seller_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "The seller has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "3ef18b7b-184b-494f-bdba-c0ab70d1e20e",
                  "date": 1696582049776,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "a4eec8ac-ef20-4419-bc96-a60801328ccb",
                  "date": 1696582049776,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sellers"
        ],
        "summary": "Retrieve Seller",
        "description": "Use this endpoint to retrieve an existing seller profile.",
        "operationId": "BIOSSellersEndpointsSellersRetrieveSellerEndpoint",
        "parameters": [
          {
            "name": "seller_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The seller with the ID you provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerContract"
                },
                "example": {
                  "id": null,
                  "country": null,
                  "type": null,
                  "mcc": null,
                  "url": null,
                  "description": null,
                  "company": null,
                  "persons": null,
                  "bank_accounts": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "79321f8a-8c0a-44d9-a2d7-6476b6155bee",
                  "date": 1696582049778,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "57705ebc-4e17-4670-a351-211db2310462",
                  "date": 1696582049778,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sellers"
        ],
        "summary": "Update Seller",
        "description": "Use this endpoint to update an existing seller profile.",
        "operationId": "BIOSSellersEndpointsSellersUpdateSellerEndpoint",
        "parameters": [
          {
            "name": "seller_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateSellerRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSellerRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The seller you have just updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerContract"
                },
                "example": {
                  "id": null,
                  "country": null,
                  "type": null,
                  "mcc": null,
                  "url": null,
                  "description": null,
                  "company": null,
                  "persons": null,
                  "bank_accounts": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "cd1850d8-9e60-4b41-a577-956bf54719ca",
                  "date": 1696582049778,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "81be3e7d-a2fa-4541-945d-9aaf0cf7a504",
                  "date": 1696582049778,
                  "errors": []
                }
              }
            }
          }
        }
      }
    },
    "/persons": {
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "Create Person",
        "description": "Use this endpoint to create a new person profile.",
        "operationId": "BIOSSellersEndpointsPersonsCreatePersonEndpoint",
        "requestBody": {
          "x-name": "CreatePersonRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "The person you have just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonContract"
                },
                "example": {
                  "id": null,
                  "seller_id": null,
                  "email": null,
                  "first_name": null,
                  "last_name": null,
                  "nationality": null,
                  "phone": null,
                  "date_of_birth": null,
                  "address": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "82be4742-b7e3-42e7-86d0-5d9d78983ab3",
                  "date": 1696582049780,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "List Persons",
        "description": "Use this endpoint to list all your persons.",
        "operationId": "BIOSSellersEndpointsPersonsListPersonsEndpoint",
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "A list of your persons.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonContract"
                  }
                },
                "example": []
              }
            }
          }
        }
      }
    },
    "/persons/{person_id}": {
      "delete": {
        "tags": [
          "Persons"
        ],
        "summary": "Delete person",
        "description": "Use this endpoint to delete an existing person profile.",
        "operationId": "BIOSSellersEndpointsPersonsDeletePersonEndpoint",
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "The person has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "9592c2e6-1c3c-4e2e-8591-4758e51ce0f7",
                  "date": 1696582049781,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "cb1ab414-fbf7-44d2-a40e-e91903510fca",
                  "date": 1696582049781,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Retrieve Person",
        "description": "Use this endpoint to retrieve an existing person profile.",
        "operationId": "BIOSSellersEndpointsPersonsRetrievePersonEndpoint",
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The person with the ID you provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonContract"
                },
                "example": {
                  "id": null,
                  "seller_id": null,
                  "email": null,
                  "first_name": null,
                  "last_name": null,
                  "nationality": null,
                  "phone": null,
                  "date_of_birth": null,
                  "address": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "b719e788-6d3f-47ab-82c3-53f5310e9b5e",
                  "date": 1696582049783,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "94714dc1-32e4-48f8-ac95-271c30f3b429",
                  "date": 1696582049783,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "Update Person",
        "description": "Use this endpoint to update an existing person profile.",
        "operationId": "BIOSSellersEndpointsPersonsUpdatePersonEndpoint",
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdatePersonRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePersonRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The person you have just updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonContract"
                },
                "example": {
                  "id": null,
                  "seller_id": null,
                  "email": null,
                  "first_name": null,
                  "last_name": null,
                  "nationality": null,
                  "phone": null,
                  "date_of_birth": null,
                  "address": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "fde63c0a-4b8d-40a3-aad5-7b6e0c7beda0",
                  "date": 1696582049785,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "a63f47ef-eed4-4a6e-98b8-874242b7c144",
                  "date": 1696582049785,
                  "errors": []
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Company",
        "description": "Use this endpoint to create a new company profile.",
        "operationId": "BIOSSellersEndpointsCompaniesCreateCompanyEndpoint",
        "requestBody": {
          "x-name": "CreateCompanyRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "The company you have just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyContract"
                },
                "example": {
                  "id": null,
                  "seller_id": null,
                  "name": null,
                  "phone": null,
                  "structure": null,
                  "address": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "05a4b1d9-bd8c-46c7-892d-8b6a911c0c13",
                  "date": 1696582049786,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "List Companies",
        "description": "Use this endpoint to list all your companies.",
        "operationId": "BIOSSellersEndpointsCompaniesListCompaniesEndpoint",
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "A list of your companies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyContract"
                  }
                },
                "example": []
              }
            }
          }
        }
      }
    },
    "/companies/{company_id}": {
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete Company",
        "description": "Use this endpoint to delete an existing company profile.",
        "operationId": "BIOSSellersEndpointsCompaniesDeleteCompanyEndpoint",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "The company has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "79c4470f-0901-4187-90b6-4ddc806bd950",
                  "date": 1696582049787,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "bce411e9-d50a-48ff-ba7c-48c38c518f9c",
                  "date": 1696582049787,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Retrieve Company",
        "description": "Use this endpoint to retrieve an existing company profile.",
        "operationId": "BIOSSellersEndpointsCompaniesRetrieveCompanyEndpoint",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The company with the ID you provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyContract"
                },
                "example": {
                  "id": null,
                  "seller_id": null,
                  "name": null,
                  "phone": null,
                  "structure": null,
                  "address": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "4f025409-0bb3-4cad-a926-2673d1ffae36",
                  "date": 1696582049788,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "29a64f20-228a-41ae-a694-12e992795dbb",
                  "date": 1696582049788,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Update Company",
        "description": "Use this endpoint to update an existing company profile.",
        "operationId": "BIOSSellersEndpointsCompaniesUpdateCompanyEndpoint",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateCompanyRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanyRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The company you have just updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyContract"
                },
                "example": {
                  "id": null,
                  "seller_id": null,
                  "name": null,
                  "phone": null,
                  "structure": null,
                  "address": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "3ad0a5c7-0e4d-466b-84ae-8ff834016c82",
                  "date": 1696582049789,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "6fb5b15b-e428-4979-a821-c7f312a535f5",
                  "date": 1696582049789,
                  "errors": []
                }
              }
            }
          }
        }
      }
    },
    "/bankaccounts": {
      "post": {
        "tags": [
          "Bankaccounts"
        ],
        "summary": "Create Bank Account",
        "description": "Use this endpoint to create a new bank account profile.",
        "operationId": "BIOSSellersEndpointsBankAccountsCreateBankAccountEndpoint",
        "requestBody": {
          "x-name": "CreateBankAccountRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "The bank account you have just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountContract"
                },
                "example": {
                  "id": null,
                  "seller_id": null,
                  "country": null,
                  "currency": null,
                  "holder_name": null,
                  "holder_type": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "2036d7b6-e015-4ca8-a126-18e1902147ed",
                  "date": 1696582049790,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bankaccounts"
        ],
        "summary": "List Bank Accounts",
        "description": "Use this endpoint to list all your bank accounts.",
        "operationId": "BIOSSellersEndpointsBankAccountsListBankAccountsEndpoint",
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "A list of your bank Accounts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccountContract"
                  }
                },
                "example": []
              }
            }
          }
        }
      }
    },
    "/bankaccounts/{bank_account_id}": {
      "delete": {
        "tags": [
          "Bankaccounts"
        ],
        "summary": "Delete Bank Account",
        "description": "Use this endpoint to delete an existing bank account profile.",
        "operationId": "BIOSSellersEndpointsBankAccountsDeleteBankAccountEndpoint",
        "parameters": [
          {
            "name": "bank_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "The bank account has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "af5de16a-68df-49fd-8c32-ee6ad53fe22d",
                  "date": 1696582049790,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "84c276f1-190c-4b9f-afa6-577cf51b7b0e",
                  "date": 1696582049790,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bankaccounts"
        ],
        "summary": "Retrieve Bank Account",
        "description": "Use this endpoint to retrieve an existing bank account profile.",
        "operationId": "BIOSSellersEndpointsBankAccountsRetrieveBankAccountEndpoint",
        "parameters": [
          {
            "name": "bank_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The bank account with the ID you provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountContract"
                },
                "example": {
                  "id": null,
                  "seller_id": null,
                  "country": null,
                  "currency": null,
                  "holder_name": null,
                  "holder_type": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "358328b4-0975-4d7c-9fde-14cc335dc158",
                  "date": 1696582049795,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "89179818-8752-4ff7-9c3c-8cee0884556f",
                  "date": 1696582049795,
                  "errors": []
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bankaccounts"
        ],
        "summary": "Update Bank Account",
        "description": "Use this endpoint to update an existing bank account profile.",
        "operationId": "BIOSSellersEndpointsBankAccountsUpdateBankAccountEndpoint",
        "parameters": [
          {
            "name": "bank_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateBankAccountRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBankAccountRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "The bank account you have just updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountContract"
                },
                "example": {
                  "id": null,
                  "seller_id": null,
                  "country": null,
                  "currency": null,
                  "holder_name": null,
                  "holder_type": null,
                  "metadata": {}
                }
              }
            }
          },
          "400": {
            "description": "The request did not pass validation checks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "One or more error occurred",
                  "type": "bad_request",
                  "id": "c6086cec-1b3b-45d2-8b25-90346e55020f",
                  "date": 1696582049796,
                  "errors": []
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                },
                "example": {
                  "message": "The requested resource cannot be found.",
                  "type": "not_found",
                  "id": "075efe61-9770-478e-8480-6fa931661823",
                  "date": 1696582049796,
                  "errors": []
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SellerContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object."
          },
          "country": {
            "type": "string",
            "description": "The seller’s country.\n/// "
          },
          "type": {
            "type": "string",
            "description": "The business type."
          },
          "mcc": {
            "type": "integer",
            "description": "The merchant category code for the account. MCCs are used to classify businesses based on the goods or services they provide.",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The business’s publicly available website.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Internal-only description of the product sold by, or service provided by, the business. Used by BIOS for risk and underwriting purposes.",
            "nullable": true
          },
          "company": {
            "description": "Information about the company or business.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CompanyContract"
              }
            ]
          },
          "persons": {
            "type": "array",
            "description": "Information about the persons attached to this sellers. ",
            "items": {
              "$ref": "#/components/schemas/PersonContract"
            }
          },
          "bank_accounts": {
            "type": "array",
            "description": "Information about the bank accounts attached to this sellers. ",
            "items": {
              "$ref": "#/components/schemas/BankAccountContract"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/MetadataContract"
          }
        }
      },
      "CompanyContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object."
          },
          "seller_id": {
            "type": "string",
            "description": "ID of the seller associated with this company."
          },
          "name": {
            "type": "string",
            "description": "The company’s legal name.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The company’s phone number (used for verification).",
            "nullable": true
          },
          "structure": {
            "type": "string",
            "description": "The category identifying the legal structure of the company or legal entity.",
            "nullable": true
          },
          "address": {
            "description": "The company’s primary address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressContract"
              }
            ]
          },
          "metadata": {
            "$ref": "#/components/schemas/MetadataContract"
          }
        }
      },
      "AddressContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "city": {
            "type": "string",
            "description": "City, district, suburb, town, or village."
          },
          "country": {
            "type": "string",
            "description": "Two-letter country code (ISO 3166-1 alpha-2)."
          },
          "line1": {
            "type": "string",
            "description": "Address line 1 (e.g., street, PO Box, or company name)."
          },
          "line2": {
            "type": "string",
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "ZIP or postal code."
          },
          "state": {
            "type": "string",
            "description": "State, county, province, or region."
          }
        }
      },
      "MetadataContract": {
        "type": "object",
        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "additionalProperties": {
          "type": "string"
        }
      },
      "PersonContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object."
          },
          "seller_id": {
            "type": "string",
            "description": "ID of the seller associated with this bank account."
          },
          "email": {
            "type": "string",
            "description": "The person’s email address.",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "The person’s first name.",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The person’s last name.",
            "nullable": true
          },
          "nationality": {
            "type": "string",
            "description": "The country where the person is a national.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The person’s phone number.",
            "nullable": true
          },
          "date_of_birth": {
            "description": "The person’s date of birth.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateOfBirthContract"
              }
            ]
          },
          "address": {
            "description": "The person’s address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressContract"
              }
            ]
          },
          "metadata": {
            "$ref": "#/components/schemas/MetadataContract"
          }
        }
      },
      "DateOfBirthContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "day": {
            "type": "integer",
            "description": "The day of birth, between 1 and 31.",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "description": "The month of birth, between 1 and 12.",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "description": "The four-digit year of birth.",
            "format": "int32"
          }
        }
      },
      "BankAccountContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object."
          },
          "seller_id": {
            "type": "string",
            "description": "ID of the seller associated with this bank account."
          },
          "country": {
            "type": "string",
            "description": "Two-letter ISO code representing the country the bank account is located in."
          },
          "currency": {
            "type": "string",
            "description": "Three-letter ISO code for the currency paid out to the bank account."
          },
          "holder_name": {
            "type": "string",
            "description": "The name of the person or business that owns the bank account.",
            "nullable": true
          },
          "holder_type": {
            "type": "string",
            "description": "The type of entity that holds the account. ",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/MetadataContract"
          }
        }
      },
      "ApiErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateSellerRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SellerOptions"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type",
              "country"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The business type.",
                "minLength": 1
              },
              "country": {
                "type": "string",
                "description": "The country in which the seller holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you’re creating an account is legally represented in Canada, you would use CA as the country for the account being created. ",
                "minLength": 1
              }
            }
          }
        ]
      },
      "SellerOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mcc": {
            "type": "integer",
            "description": "The merchant category code for the account. MCCs are used to classify businesses based on the goods or services they provide.",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The business’s publicly available website.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Internal-only description of the product sold by, or service provided by, the business. Used by BIOS for risk and underwriting purposes.",
            "nullable": true
          },
          "company": {
            "description": "Information about the company or business.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CompanyOptions"
              }
            ]
          },
          "persons": {
            "type": "array",
            "description": "Information about the person to attach to this sellers. ",
            "items": {
              "$ref": "#/components/schemas/PersonOptions"
            }
          },
          "bank_accounts": {
            "type": "array",
            "description": "Bank accounts to attach to the seller for receiving payouts ",
            "items": {
              "$ref": "#/components/schemas/BankAccountOptions"
            }
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetadataOptions"
              }
            ]
          }
        }
      },
      "CompanyOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The company’s legal name.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The company’s phone number(used for verification).",
            "nullable": true
          },
          "structure": {
            "type": "string",
            "description": "The category identifying the legal structure of the company or legal entity.",
            "nullable": true
          },
          "address": {
            "description": "The company’s primary address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressOptions"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetadataOptions"
              }
            ]
          }
        }
      },
      "AddressOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "city": {
            "type": "string",
            "description": "City, district, suburb, town, or village."
          },
          "country": {
            "type": "string",
            "description": "Two-letter country code (ISO 3166-1 alpha-2)."
          },
          "line1": {
            "type": "string",
            "description": "Address line 1 (e.g., street, PO Box, or company name)."
          },
          "line2": {
            "type": "string",
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "ZIP or postal code."
          },
          "state": {
            "type": "string",
            "description": "State, county, province, or region."
          }
        }
      },
      "MetadataOptions": {
        "type": "object",
        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata.",
        "additionalProperties": {
          "type": "string",
          "nullable": true
        }
      },
      "PersonOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "description": "The person’s email address.",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "The person’s first name.",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The person’s last name.",
            "nullable": true
          },
          "nationality": {
            "type": "string",
            "description": "The country where the person is a national.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The person’s phone number.",
            "nullable": true
          },
          "dob": {
            "description": "The person’s date of birth.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateOfBirthOptions"
              }
            ]
          },
          "address": {
            "description": "The person’s address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressOptions"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetadataOptions"
              }
            ]
          }
        }
      },
      "DateOfBirthOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "day": {
            "type": "integer",
            "description": "The day of birth, between 1 and 31.",
            "format": "int32",
            "nullable": true
          },
          "month": {
            "type": "integer",
            "description": "The month of birth, between 1 and 12.",
            "format": "int32",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "description": "The four-digit year of birth.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "BankAccountOptions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateBankAccountRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "country",
              "currency",
              "account_number"
            ],
            "properties": {
              "country": {
                "type": "string",
                "description": "The country in which the bank account is located.",
                "minLength": 1
              },
              "currency": {
                "type": "string",
                "description": "The currency the bank account is in. This must be a country/currency pairing that BIOS supports.",
                "minLength": 1
              },
              "account_number": {
                "type": "string",
                "description": "The account number for the bank account, in string form. Must be a checking account.",
                "minLength": 1
              }
            }
          }
        ]
      },
      "UpdateBankAccountRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "holder_name": {
            "type": "string",
            "description": "The name of the person or business that owns the bank account.",
            "nullable": true
          },
          "holder_type": {
            "type": "string",
            "description": "The type of entity that holds the account. This can be either individual or company. ",
            "nullable": true
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetadataOptions"
              }
            ]
          }
        }
      },
      "EmptyResponse": {
        "type": "object",
        "description": "a response dto that doesn't have any properties",
        "additionalProperties": false
      },
      "UpdateSellerRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SellerOptions"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreatePersonRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PersonOptions"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "seller_id"
            ],
            "properties": {
              "seller_id": {
                "type": "string",
                "description": "The Seller ID that this person belongs to.",
                "minLength": 1
              }
            }
          }
        ]
      },
      "UpdatePersonRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PersonOptions"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateCompanyRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CompanyOptions"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "seller_id"
            ],
            "properties": {
              "seller_id": {
                "type": "string",
                "description": "The Seller ID that this company belongs to.",
                "minLength": 1
              }
            }
          }
        ]
      },
      "UpdateCompanyRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CompanyOptions"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateBankAccountRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankAccountOptions"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "seller_id"
            ],
            "properties": {
              "seller_id": {
                "type": "string",
                "description": "The Seller ID that this bank belongs to.",
                "minLength": 1
              }
            }
          }
        ]
      }
    }
  }
}